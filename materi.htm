<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta name="keywords" content="IMK" /> 
<meta name="description" content="Tugas Besar IMK" /> 
<meta name="author" content="Administrator" /> 
<meta name="developer" content="Agung Panji Sasmito - Shofiyah Al Idrus - Ragil Tri Astuti" /> 
<meta name="robots" content="index,follow" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Materi - TEKNIK KOMPUTER DAN JARINGAN - Tugas Besar IMK</title>
<link rel="icon" type="image/x-icon" href="./images/icon.jpg"> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="./component/materi.css" type="text/css" />
<SCRIPT TYPE="text/javascript" SRC="./component/materi.js">
<!--

// JavaScript Slideshow by Patrick Fitzgerald
// http://slideshow.barelyfitz.com/

// -->
</SCRIPT>

<SCRIPT TYPE="text/javascript">
<!--

// Create the slideshow object
ss = new slideshow("ss");

// Set the delay between slides, 1000 = 1 sec
// ss.timeout = 3000;

// By default, all of the slideshow images are prefetched.
// If you have a large number of slides you can limit the
// number of images that are prefetched.
// ss.prefetch = 1;

// By default the slideshow will repeat when you get to the end.
// ss.repeat = false;

// Create the slides and add them to the slideshow.
s = new slide();
s.src =  "materi/pic01.jpg";
s.link = "materi/pic01.jpg";
s.title = "Jaringan Komputer";
s.text = "<div class=konten>Jaringan komputer adalah sebuah sistem yang terdiri atas komputer-komputer yang didesain untuk dapat berbagi sumber daya (printer, CPU), berkomunikasi (surel, pesan instan), dan dapat mengakses informasi (peramban web) </div>";
//s.target = "";
//s.attr = "";
//s.filter = "";
//s.timeout = "";
ss.add_slide(s);

s = new slide();
s.src =  "materi/pic02.jpg";
s.link = "materi/pic02.jpg";
s.title = "Internet Protocol";
s.text = "<div class=konten>Internet Protocol (IP) adalah protokol lapisan jaringan (network layer dalam OSI Reference Model) atau protokol lapisan internetwork (internetwork layer dalam DARPA Reference Model) yang digunakan oleh protokol TCP/IP untuk melakukan pengalamatan dan routing paket data antar host-host di jaringan komputer berbasis TCP/IP. Sebuah paket IP akan membawa data aktual yang dikirimkan melalui jaringan dari satu titik ke titik lainnya. </div>";
ss.add_slide(s);

s = new slide();
s.src =  "materi/pic03.jpg";
s.link = "materi/pic03.jpg";
s.title = "IP config";
s.text = "<div class=konten>Ipconfig adalah salah satu perintah pada sistem operasi windows yang berfungsi untuk menampilkan konfigurasi IP komputer. Dengan menggunakan utilitas ini maka user dapat melihat konfigurasi apa saja yang telah diatur di komputernya.Contoh penggunaan ipconfig adalah dengan mengetikkan ipconfig pada jendela command prompt maka konfigurasi IP yang sedang digunakan pada jaringan dapat diketahui.</div>";
ss.add_slide(s);

s = new slide();
s.src =  "materi/pic04.jpg";
s.link = "materi/pic04.jpg";
s.title = "LAN";
s.text = "<div class=konten>Local Area Network (LAN) adalah jaringan komputer yang jaringannya hanya mencakup wilayah kecil; seperti jaringan komputer kampus, gedung, kantor, dalam rumah, sekolah atau yang lebih kecil. Saat ini, kebanyakan LAN berbasis pada teknologi IEEE 802.3 Ethernet menggunakan perangkat switch, yang mempunyai kecepatan transfer data 10, 100, atau 1000 Mbit/s. </div>";
ss.add_slide(s);

s = new slide();
s.src =  "materi/pic05.jpg";
s.link = "materi/pic05.jpg";
s.title = "Kabel Staight";
s.text = "<div class=konten>Kabel straight merupakan kabel yang memiliki cara pemasangan yang sama antara ujung satu  dengan ujung yang lainnya. Kabel straight digunakan untuk menghubungkan 2 device yang berbeda. </div>";
ss.add_slide(s);

s = new slide();
s.src =  "materi/pic06.jpg";
s.link = "materi/pic06.jpg";
s.title = "Kabel Crossover";
s.text = "<div class=konten>Kabel cross over merupakan kabel yang memiliki susunan berbeda antara ujung satu dengan ujung dua. Kabel cross over  digunakan untuk menghubungkan 2 device yang sama.</div>";
ss.add_slide(s);

// The following loop sets an attribute for all of the slides.
// This is easier than setting the attributes individually.

for (var i=0; i < ss.slides.length; i++) {

  s = ss.slides[i];
  s.target = "ss_popup";
  s.attr = "width=320,height=420,resizable=yes,scrollbars=yes";

}

//-->
</SCRIPT>
</HEAD>

<!--
The update() method is required to make sure the text matches the image.
The restore_position() and save_position() methods are optional.
The 'SS_POSITION' parameter is the name of the cookie in which the slide
number is stored.
-->
<BODY ONLOAD="ss.restore_position('SS_POSITION');ss.update();"
ONUNLOAD="ss.save_position('SS_POSITION');">
<center>
<div class=wrapper>
<DIV ID="slideshow">

<FORM ID="ss_form" NAME="ss_form" ACTION="" METHOD="GET">

<DIV ID="ss_controls">
<div class=navigasi>
<!--<A ID="ss_start" HREF="javascript:ss.next();ss.play()"><SPAN>START-OTO</SPAN></A>
<A ID="ss_stop" HREF="javascript:ss.pause()"><SPAN>PAUSE</SPAN></A>-->
<div class=navigasi-kiri>
<A ID="ss_prev" HREF="javascript:ss.previous()"><img src=./component/btn_prev.jpg></A>
</div>
<div class=navigasi-kanan>
<A ID="ss_next" HREF="javascript:ss.next()"><img src=./component/btn_next.jpg></A>
</div><br/></div>
</DIV>
<DIV ID="ss_img_div">

<IMG
ID="ss_img" NAME="ss_img" SRC="materi/pic01.jpg"
STYLE="width:400px;filter:progid:DXImageTransform.Microsoft.Fade();"
ALT="Slideshow image">

</DIV>


<DIV ID="ss_text">

<SCRIPT type="text/javascript">
<!--

// The contents of this DIV will be overwritten by browsers
// that support innerHTML.
//
// For browsers that do not support innerHTML, we will display
// a TEXTAREA element to hold the slide text.
// Note however that if the slide text contains HTML, then the
// HTML codes will be visible in the textarea.

document.write('<TEXTAREA ID="ss_textarea" NAME="ss_textarea" ROWS="6" COLS="40" WRAP="virtual"><\/TEXTAREA>\n');

ss.textarea = document.ss_form.ss_textarea;

//-->
</SCRIPT>

</DIV>

</FORM>

</DIV>

<SCRIPT TYPE="text/javascript">
<!--

// Finish defining and activating the slideshow

// Set up the select list with the slide titles
function config_ss_select() {
  var selectlist = document.ss_form.ss_select;
  selectlist.options.length = 0;
  for (var i = 0; i < ss.slides.length; i++) {
    selectlist.options[i] = new Option();
    selectlist.options[i].text = (i + 1) + '. ' + ss.slides[i].title;
  }
  selectlist.selectedIndex = ss.current;
}

// If you want some code to be called before or
// after the slide is updated, define the functions here

ss.pre_update_hook = function() {
  return;
}

ss.post_update_hook = function() {
  // For the select list with the slide titles,
  // set the selected item to the current slide
  document.ss_form.ss_select.selectedIndex = this.current;
  return;
}

if (document.images) {

  // Tell the slideshow which image object to use
  ss.image = document.images.ss_img;

  // Tell the slideshow the ID of the element
  // that will contain the text for the slide
  ss.textid = "ss_text";

  // Randomize the slideshow?
  // ss.shuffle();

  // Set up the select list with the slide titles
  config_ss_select();

  // Update the image and the text for the slideshow
  ss.update();

  // Auto-play the slideshow
  //ss.play();
}

//-->
</SCRIPT>


<SCRIPT TYPE="text/javascript">
<!--

// Make the slideshow accessible to search engines
// and non-javascript browsers.
//
// The following function is normally left commented out.
// It is used only to produce some HTML that you can copy
// into the NOSCRIPT section below.
// The HTML produced will contain all of the slideshow images,
// plus the text for each image.

// document.write("<PRE>" + ss.noscript() + "<\/PRE>");

//-->
</SCRIPT>

<NOSCRIPT>

<!--
This is a version of the slideshow for search engines
and non-javascript browsers
-->

</NOSCRIPT>
<br/><div class=navigasi-home><a href=index.htm><img src=./component/home.jpg></a></div>
</div>
</center>
</BODY>
</HTML>
